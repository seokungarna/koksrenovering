{"version":3,"file":"cms.66f12d1555d7087bbece.hot-update.js","sources":["webpack:///./node_modules/dom-form-serializer/dist/dom-form-serializer.mjs","webpack:///./node_modules/matches-selector/index.js","webpack:///./src/components/FormSimpleAjax.js","webpack:///./src/templates/ContactPage.js"],"sourcesContent":["import matchesSelector from 'matches-selector';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar TypeRegistry = function () {\n  function TypeRegistry() {\n    var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TypeRegistry);\n\n    this.registeredTypes = initial;\n  }\n\n  createClass(TypeRegistry, [{\n    key: 'get',\n    value: function get(type) {\n      if (typeof this.registeredTypes[type] !== 'undefined') {\n        return this.registeredTypes[type];\n      } else {\n        return this.registeredTypes['default'];\n      }\n    }\n  }, {\n    key: 'register',\n    value: function register(type, item) {\n      if (typeof this.registeredTypes[type] === 'undefined') {\n        this.registeredTypes[type] = item;\n      }\n    }\n  }, {\n    key: 'registerDefault',\n    value: function registerDefault(item) {\n      this.register('default', item);\n    }\n  }]);\n  return TypeRegistry;\n}();\n\nvar KeyExtractors = function (_TypeRegistry) {\n  inherits(KeyExtractors, _TypeRegistry);\n\n  function KeyExtractors(options) {\n    classCallCheck(this, KeyExtractors);\n\n    var _this = possibleConstructorReturn(this, (KeyExtractors.__proto__ || Object.getPrototypeOf(KeyExtractors)).call(this, options));\n\n    _this.registerDefault(function (el) {\n      return el.getAttribute('name') || '';\n    });\n    return _this;\n  }\n\n  return KeyExtractors;\n}(TypeRegistry);\n\nvar InputReaders = function (_TypeRegistry) {\n  inherits(InputReaders, _TypeRegistry);\n\n  function InputReaders(options) {\n    classCallCheck(this, InputReaders);\n\n    var _this = possibleConstructorReturn(this, (InputReaders.__proto__ || Object.getPrototypeOf(InputReaders)).call(this, options));\n\n    _this.registerDefault(function (el) {\n      return el.value;\n    });\n    _this.register('checkbox', function (el) {\n      return el.getAttribute('value') !== null ? el.checked ? el.getAttribute('value') : null : el.checked;\n    });\n    _this.register('select', function (el) {\n      return getSelectValue(el);\n    });\n    return _this;\n  }\n\n  return InputReaders;\n}(TypeRegistry);\n\nfunction getSelectValue(elem) {\n  var value, option, i;\n  var options = elem.options;\n  var index = elem.selectedIndex;\n  var one = elem.type === 'select-one';\n  var values = one ? null : [];\n  var max = one ? index + 1 : options.length;\n\n  if (index < 0) {\n    i = max;\n  } else {\n    i = one ? index : 0;\n  }\n\n  // Loop through all the selected options\n  for (; i < max; i++) {\n    option = options[i];\n\n    // Support: IE <=9 only\n    // IE8-9 doesn't update selected after form reset\n    if ((option.selected || i === index) &&\n\n    // Don't return options that are disabled or in a disabled optgroup\n    !option.disabled && (!option.parentNode.disabled || option.parentNode.tagName.toLowerCase() === 'optgroup')) {\n      // Get the specific value for the option\n      value = option.value;\n\n      // We don't need an array for one selects\n      if (one) {\n        return value;\n      }\n\n      // Multi-Selects return an array\n      values.push(value);\n    }\n  }\n\n  return values;\n}\n\nvar KeyAssignmentValidators = function (_TypeRegistry) {\n  inherits(KeyAssignmentValidators, _TypeRegistry);\n\n  function KeyAssignmentValidators(options) {\n    classCallCheck(this, KeyAssignmentValidators);\n\n    var _this = possibleConstructorReturn(this, (KeyAssignmentValidators.__proto__ || Object.getPrototypeOf(KeyAssignmentValidators)).call(this, options));\n\n    _this.registerDefault(function () {\n      return true;\n    });\n    _this.register('radio', function (el) {\n      return el.checked;\n    });\n    return _this;\n  }\n\n  return KeyAssignmentValidators;\n}(TypeRegistry);\n\nfunction keySplitter(key) {\n  var matches = key.match(/[^[\\]]+/g);\n  var lastKey = void 0;\n  if (key.length > 1 && key.indexOf('[]') === key.length - 2) {\n    lastKey = matches.pop();\n    matches.push([lastKey]);\n  }\n  return matches;\n}\n\nfunction getElementType(el) {\n  var typeAttr = void 0;\n  var tagName = el.tagName;\n  var type = tagName;\n  if (tagName.toLowerCase() === 'input') {\n    typeAttr = el.getAttribute('type');\n    if (typeAttr) {\n      type = typeAttr;\n    } else {\n      type = 'text';\n    }\n  }\n  return type.toLowerCase();\n}\n\nfunction getInputElements(element, options) {\n  return Array.prototype.filter.call(element.querySelectorAll('input,select,textarea'), function (el) {\n    if (el.tagName.toLowerCase() === 'input' && (el.type === 'submit' || el.type === 'reset')) {\n      return false;\n    }\n    var myType = getElementType(el);\n    var extractor = options.keyExtractors.get(myType);\n    var identifier = extractor(el);\n    var foundInInclude = (options.include || []).indexOf(identifier) !== -1;\n    var foundInExclude = (options.exclude || []).indexOf(identifier) !== -1;\n    var foundInIgnored = false;\n    var reject = false;\n\n    if (options.ignoredTypes) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = options.ignoredTypes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var selector = _step.value;\n\n          if (matchesSelector(el, selector)) {\n            foundInIgnored = true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n\n    if (foundInInclude) {\n      reject = false;\n    } else {\n      if (options.include) {\n        reject = true;\n      } else {\n        reject = foundInExclude || foundInIgnored;\n      }\n    }\n\n    return !reject;\n  });\n}\n\nfunction assignKeyValue(obj, keychain, value) {\n  if (!keychain) {\n    return obj;\n  }\n\n  var key = keychain.shift();\n\n  // build the current object we need to store data\n  if (!obj[key]) {\n    obj[key] = Array.isArray(key) ? [] : {};\n  }\n\n  // if it's the last key in the chain, assign the value directly\n  if (keychain.length === 0) {\n    if (!Array.isArray(obj[key])) {\n      obj[key] = value;\n    } else if (value !== null) {\n      obj[key].push(value);\n    }\n  }\n\n  // recursive parsing of the array, depth-first\n  if (keychain.length > 0) {\n    assignKeyValue(obj[key], keychain, value);\n  }\n\n  return obj;\n}\n\n/**\n * Get a JSON object that represents all of the form inputs, in this element.\n *\n * @param {HTMLElement} Root element\n * @param {object} options\n * @param {object} options.inputReaders\n * @param {object} options.keyAssignmentValidators\n * @param {object} options.keyExtractors\n * @param {object} options.keySplitter\n * @param {string[]} options.include\n * @param {string[]} options.exclude\n * @param {string[]} options.ignoredTypes\n * @return {object}\n */\nfunction serialize(element) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var data = {};\n  options.keySplitter = options.keySplitter || keySplitter;\n  options.keyExtractors = new KeyExtractors(options.keyExtractors || {});\n  options.inputReaders = new InputReaders(options.inputReaders || {});\n  options.keyAssignmentValidators = new KeyAssignmentValidators(options.keyAssignmentValidators || {});\n\n  Array.prototype.forEach.call(getInputElements(element, options), function (el) {\n    var type = getElementType(el);\n    var keyExtractor = options.keyExtractors.get(type);\n    var key = keyExtractor(el);\n    var inputReader = options.inputReaders.get(type);\n    var value = inputReader(el);\n    var validKeyAssignment = options.keyAssignmentValidators.get(type);\n    if (validKeyAssignment(el, key, value)) {\n      var keychain = options.keySplitter(key);\n      data = assignKeyValue(data, keychain, value);\n    }\n  });\n\n  return data;\n}\n\nvar InputWriters = function (_TypeRegistry) {\n  inherits(InputWriters, _TypeRegistry);\n\n  function InputWriters(options) {\n    classCallCheck(this, InputWriters);\n\n    var _this = possibleConstructorReturn(this, (InputWriters.__proto__ || Object.getPrototypeOf(InputWriters)).call(this, options));\n\n    _this.registerDefault(function (el, value) {\n      el.value = value;\n    });\n    _this.register('checkbox', function (el, value) {\n      if (value === null) {\n        el.indeterminate = true;\n      } else {\n        el.checked = Array.isArray(value) ? value.indexOf(el.value) !== -1 : value;\n      }\n    });\n    _this.register('radio', function (el, value) {\n      if (value !== undefined) {\n        el.checked = el.value === value.toString();\n      }\n    });\n    _this.register('select', setSelectValue);\n    return _this;\n  }\n\n  return InputWriters;\n}(TypeRegistry);\n\nfunction makeArray(arr) {\n  var ret = [];\n  if (arr !== null) {\n    if (Array.isArray(arr)) {\n      ret.push.apply(ret, arr);\n    } else {\n      ret.push(arr);\n    }\n  }\n  return ret;\n}\n\n/**\n * Write select values\n *\n * @see {@link https://github.com/jquery/jquery/blob/master/src/attributes/val.js|Github}\n * @param {object} Select element\n * @param {string|array} Select value\n */\nfunction setSelectValue(elem, value) {\n  var optionSet, option;\n  var options = elem.options;\n  var values = makeArray(value);\n  var i = options.length;\n\n  while (i--) {\n    option = options[i];\n    /* eslint-disable no-cond-assign */\n    if (values.indexOf(option.value) > -1) {\n      option.setAttribute('selected', true);\n      optionSet = true;\n    }\n    /* eslint-enable no-cond-assign */\n  }\n\n  // Force browsers to behave consistently when non-matching value is set\n  if (!optionSet) {\n    elem.selectedIndex = -1;\n  }\n}\n\nfunction keyJoiner(parentKey, childKey) {\n  return parentKey + '[' + childKey + ']';\n}\n\nfunction flattenData(data, parentKey) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var flatData = {};\n  var keyJoiner$$ = options.keyJoiner || keyJoiner;\n\n  for (var keyName in data) {\n    if (!data.hasOwnProperty(keyName)) {\n      continue;\n    }\n\n    var value = data[keyName];\n    var hash = {};\n\n    // If there is a parent key, join it with\n    // the current, child key.\n    if (parentKey) {\n      keyName = keyJoiner$$(parentKey, keyName);\n    }\n\n    if (Array.isArray(value)) {\n      hash[keyName + '[]'] = value;\n      hash[keyName] = value;\n    } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object') {\n      hash = flattenData(value, keyName, options);\n    } else {\n      hash[keyName] = value;\n    }\n\n    Object.assign(flatData, hash);\n  }\n\n  return flatData;\n}\n\n/**\n * Use the given JSON object to populate all of the form inputs, in this element.\n *\n * @param {HTMLElement} Root element\n * @param {object} options\n * @param {object} options.inputWriters\n * @param {object} options.keyExtractors\n * @param {object} options.keySplitter\n * @param {string[]} options.include\n * @param {string[]} options.exclude\n * @param {string[]} options.ignoredTypes\n */\nfunction deserialize(form, data) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var flattenedData = flattenData(data, null, options);\n  options.keyExtractors = new KeyExtractors(options.keyExtractors || {});\n  options.inputWriters = new InputWriters(options.inputWriters || {});\n\n  Array.prototype.forEach.call(getInputElements(form, options), function (el) {\n    var type = getElementType(el);\n\n    var keyExtractor = options.keyExtractors.get(type);\n    var key = keyExtractor(el);\n\n    var inputWriter = options.inputWriters.get(type);\n    var value = flattenedData[key];\n\n    inputWriter(el, value);\n  });\n}\n\nexport { serialize, deserialize };\n//# sourceMappingURL=dom-form-serializer.mjs.map\n","'use strict';\n\nvar proto = typeof Element !== 'undefined' ? Element.prototype : {};\nvar vendor = proto.matches\n  || proto.matchesSelector\n  || proto.webkitMatchesSelector\n  || proto.mozMatchesSelector\n  || proto.msMatchesSelector\n  || proto.oMatchesSelector;\n\nmodule.exports = match;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match(el, selector) {\n  if (!el || el.nodeType !== 1) return false;\n  if (vendor) return vendor.call(el, selector);\n  var nodes = el.parentNode.querySelectorAll(selector);\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}\n","import React, { Fragment } from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { stringify } from 'qs'\r\nimport { serialize } from 'dom-form-serializer'\r\n\r\nimport './Form.css'\r\n\r\nclass Form extends React.Component {\r\n  static defaultProps = {\r\n    name: 'Simple Form Ajax',\r\n    subject: '', // optional subject of the notification email\r\n    action: '',\r\n    successMessage: 'Thanks for your enquiry, we will get back to you soon',\r\n    errorMessage:\r\n      'There is a problem, your message has not been sent, please try contacting us via email'\r\n  }\r\n\r\n  state = {\r\n    alert: '',\r\n    disabled: false\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (this.state.disabled) return\r\n\r\n    const form = e.target\r\n    const data = serialize(form)\r\n    this.setState({ disabled: true })\r\n    fetch(form.action + '?' + stringify(data), {\r\n      method: 'POST'\r\n    })\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res\r\n        } else {\r\n          throw new Error('Network error')\r\n        }\r\n      })\r\n      .then(() => {\r\n        form.reset()\r\n        this.setState({\r\n          alert: this.props.successMessage,\r\n          disabled: false\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.error(err)\r\n        this.setState({\r\n          disabled: false,\r\n          alert: this.props.errorMessage\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { name, subject, action } = this.props\r\n\r\n    return (\r\n      <Fragment>\r\n        <Helmet>\r\n          <script src=\"https://www.google.com/recaptcha/api.js\" />\r\n        </Helmet>\r\n        <form\r\n          className=\"Form\"\r\n          name={name}\r\n          action={action}\r\n          onSubmit={this.handleSubmit}\r\n          data-netlify=\"\"\r\n          netlify-recaptcha=\"\"\r\n        >\r\n          {this.state.alert && (\r\n            <div className=\"Form--Alert\">{this.state.alert}</div>\r\n          )}\r\n          <div className=\"Form--Group\">\r\n            <label className=\"Form--Label\">\r\n              <input\r\n                className=\"Form--Input Form--InputText\"\r\n                type=\"text\"\r\n                placeholder=\"Firstname\"\r\n                name=\"firstname\"\r\n                required\r\n              />\r\n              <span>Firstname</span>\r\n            </label>\r\n            <label className=\"Form--Label\">\r\n              <input\r\n                className=\"Form--Input Form--InputText\"\r\n                type=\"text\"\r\n                placeholder=\"Lastname\"\r\n                name=\"lastname\"\r\n                required\r\n              />\r\n              <span>Lastname</span>\r\n            </label>\r\n          </div>\r\n          <fieldset>\r\n            <label className=\"Form--Label Form--Radio\">\r\n              <input\r\n                className=\"Form--RadioInput\"\r\n                type=\"radio\"\r\n                name=\"gender\"\r\n                value=\"male\"\r\n                defaultChecked\r\n              />\r\n              <span>Male</span>\r\n            </label>\r\n            <label className=\"Form--Label Form--Radio\">\r\n              <input\r\n                className=\"Form--RadioInput\"\r\n                type=\"radio\"\r\n                name=\"gender\"\r\n                value=\"female\"\r\n              />\r\n              <span>Female</span>\r\n            </label>\r\n          </fieldset>\r\n          <label className=\"Form--Label\">\r\n            <input\r\n              className=\"Form--Input Form--InputText\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              name=\"emailAddress\"\r\n              required\r\n            />\r\n            <span>Email address</span>\r\n          </label>\r\n          <label className=\"Form--Label has-arrow\">\r\n            <select\r\n              className=\"Form--Input Form--Select\"\r\n              name=\"type\"\r\n              defaultValue=\"Type of Enquiry\"\r\n              required\r\n            >\r\n              <option disabled hidden>\r\n                Type of Enquiry\r\n              </option>\r\n              <option>Need to know more</option>\r\n              <option>Found a bug</option>\r\n              <option>Want to say hello</option>\r\n            </select>\r\n          </label>\r\n          <label className=\"Form--Label\">\r\n            <textarea\r\n              className=\"Form--Input Form--Textarea Form--InputText\"\r\n              placeholder=\"Message\"\r\n              name=\"message\"\r\n              rows=\"10\"\r\n              required\r\n            />\r\n            <span>Message</span>\r\n          </label>\r\n          <label className=\"Form--Label Form-Checkbox\">\r\n            <input\r\n              className=\"Form--Input Form--Textarea Form--CheckboxInput\"\r\n              name=\"newsletter\"\r\n              type=\"checkbox\"\r\n            />\r\n            <span>Get news updates</span>\r\n          </label>\r\n          <div\r\n            className=\"g-recaptcha\"\r\n            data-sitekey=\"6LfKN3kUAAAAAGIM1CbXmaRZx3LIh_W2twn1tzkA\"\r\n          />\r\n          {!!subject && <input type=\"hidden\" name=\"subject\" value={subject} />}\r\n          <input type=\"hidden\" name=\"form-name\" value={name} />\r\n          <input\r\n            className=\"Button Form--SubmitButton\"\r\n            type=\"submit\"\r\n            value=\"Enquire\"\r\n            disabled={this.state.disabled}\r\n          />\r\n        </form>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\nimport { MapPin, Smartphone, Mail } from 'react-feather'\r\nimport { graphql } from 'gatsby'\r\n\r\n//import PageHeader from '../components/PageHeader'\r\nimport FormSimple from '../components/FormSimpleAjax'\r\nimport Content from '../components/Content'\r\n//import GoogleMap from '../components/GoogleMap'\r\nimport Layout from '../components/Layout'\r\nimport './ContactPage.css'\r\n\r\n// Export Template for use in CMS preview\r\nexport const ContactPageTemplate = ({\r\n  body,\r\n  title,\r\n  subtitle,\r\n  featuredImage,\r\n  address,\r\n  phone,\r\n  email,\r\n  locations\r\n}) => (\r\n  <main className=\"Contact\">\r\n    {/* <PageHeader\r\n      title={title}\r\n      subtitle={subtitle}\r\n      backgroundImage={featuredImage}\r\n    /> */}\r\n    <section className=\"section Contact--Section1\">\r\n      <div className=\"container Contact--Section1--Container\">\r\n        <div>\r\n          <Content source={body} />\r\n          <div className=\"Contact--Details\">\r\n            {address && (\r\n              <a\r\n                className=\"Contact--Details--Item\"\r\n                href={`https://www.google.com.au/maps/search/${encodeURI(\r\n                  address\r\n                )}`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <MapPin /> {address}\r\n              </a>\r\n            )}\r\n            {phone && (\r\n              <a className=\"Contact--Details--Item\" href={`tel:${phone}`}>\r\n                <Smartphone /> {phone}\r\n              </a>\r\n            )}\r\n            {email && (\r\n              <a className=\"Contact--Details--Item\" href={`mailto:${email}`}>\r\n                <Mail /> {email}\r\n              </a>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <FormSimple name=\"Simple Form Ajax\" />\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    {/* <GoogleMap locations={locations} /> */}\r\n  </main>\r\n)\r\n\r\nconst ContactPage = ({ data: { page } }) => (\r\n  <Layout\r\n    meta={page.frontmatter.meta || false}\r\n    title={page.frontmatter.title || false}\r\n  >\r\n    <ContactPageTemplate {...page.frontmatter} body={page.html} />\r\n  </Layout>\r\n)\r\n\r\nexport default ContactPage\r\n\r\nexport const pageQuery = graphql`\r\n  query ContactPage($id: String!) {\r\n    page: markdownRemark(id: { eq: $id }) {\r\n      ...Meta\r\n      html\r\n      frontmatter {\r\n        title\r\n        template\r\n        subtitle\r\n        featuredImage\r\n        address\r\n        phone\r\n        email\r\n        locations {\r\n          mapLink\r\n          lat\r\n          lng\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"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","sourceRoot":""}